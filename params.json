{"name":"S-diary","tagline":"“S Diary” runs on both iPhone and iPad. It serves as an event management application.","body":"# S Diary\r\n\r\n## APP DEFINITION STATEMENT\r\n\r\n“S Diary” is a mini social life costs/rewards monitor. \r\n\r\nApart from properties most event management app record, “S Diary” also records your spend and satisfaction rate for an event, and associate them with your friends, coworkers, and etc. involved in this event. It will calculate the average spends and rates for each person recorded in app and generate a list. You can choose to view the list by average spends (high to low) or average rates (high to low).\r\n\r\nWhile the relationship between costs and rewards is complicated to measure in real life, you would find this app useful for tracking social spends and for fun as well.\r\n\r\n## ABSTRACT\r\n\r\nThis application runs on both iPhone and iPad.\r\n\r\nIt serves as a simple event management application. Any events created would be stored in the application in a persistent manner.\r\n\r\n**Events in the application contain the following properties:**\r\n* Title of the event \r\n* Start and end time of the event\r\n* Location of the event  \r\n* People who are involved in the event\r\n* Photos of the event\r\n* Your satisfaction rate for the event\r\n* Your spend for the event\r\n\r\n**Features:**\r\n* Creating an event\r\n* Viewing all events in a list sorted by start time \r\n* Viewing an particular event’s details\r\n* Editing an event\r\n* Deleting an event\r\n* Searching a location or selecting from Bookmarks, and assigning the chosen one to an event;\r\n* Viewing the location of a particular event or all potential events on a map;\r\n* Opening your device’s Maps app automatically for directions to an event;\r\n* Capturing and viewing photos for a particular event;\r\n* Adding a person to an event by selecting a contact in your device’s Contacts app.\r\n* Viewing a list of people for a particular event;\r\n* Recording and viewing your spend and satisfaction rate for a particular event;\r\n* Viewing you average spend and average rate associated with a particular person.\r\n\r\n## USAGE\r\n\r\nThis application requires running on a actual device (either iPhone or iPad). It is not fully functional in simulator.\r\n\r\nInternet access is essential.\r\n\r\n## BUILD REQUIREMENTS\r\n\r\niOS 6.0 SDK or later\r\n\r\n## RUNTIME REQUIREMENTS\r\n\r\niOS 6.0 or later, uses Automatic Reference Counting (ARC)\r\n\r\n## CHANGES FROM PREVIOUS VERSIONS\r\n\r\nVersion 1.0\r\n\r\n## PACKAGING LIST\r\n\r\n### Application configuration\r\n\r\n**APLAppDelegate.{h,m}**\r\n\r\nConfigures the Core Data stack and the first view controller.\r\n\r\n### Model\r\n\r\n**S_Diary.xcdatamodeld**\r\n\r\nThe Core Data managed object model for the application.\r\n\r\n**Event.{h,m}**\r\n\r\nA Core Data managed object class to represent an event containing a title, a start time, an end time, a Location object, a set of Attendee objects, a set of Photo objects, a rate and a cost.\r\n\r\nEvent has a to-one relationship to Location, a to-many relationship to Attendee and a to-many relationship to Photo.\r\n\r\n**Location.{h,m}**\r\n\r\nA Core Data managed object class to represent a location containing a name, a latitude, and a longitude.\r\n\r\nLocation has a to-one relationship to Event.\r\n\r\n**Bookmark.{h,m}**\r\n\r\nA Core Data managed object class to represent a location containing a name, a latitude, and a longitude.\r\n\r\nBookmark is a subclass of Location.\r\n\r\n**Attendee.{h,m}**\r\n\r\nA Core Data managed object class to represent a location containing a name.\r\n\r\nAttendee has a to-many relationship to Event.\r\n\r\n**Photo.{h,m}**\r\n\r\nA Core Data managed object class to represent a photo containing an image and a timestamp.\r\n\r\nPhoto has a to-one relationship to Event.\r\n\r\n**ImageToDataTransformer.{h,m}**\r\n\r\nA value transformer that transforms a UIImage object into an NSData object.\r\n\r\n### Views\r\n\r\n**Storyboard_iPhone.storyboard**\r\n\r\nThe view controller graph encapsulated by a UIStoryboard object for iPhone.\r\n\r\n**Storyboard_iPad.storyboard**\r\n\r\nThe view controller graph encapsulated by a UIStoryboard object for iPhone.\r\n\r\n### Controllers\r\n\r\n**EventListController.{h,m}**\r\n\r\nThe table view controller responsible for displaying the list of events, and supporting deletion of existing events.\r\n\r\nIt is the delegate of an EventDetailsController object and adopts the EventDetailsControllerDelegate protocol, which allows it to manage addition of new events.\r\n\r\nIt also posts an EventChangedNotification to the default notification center when an event is deleted.\r\n\r\n**EventDetailsController.{h,m}**\r\n\r\nThe table view controller responsible for displaying the title, start & end time, location name, rate and cost of an event, and allowing user to view and/or edit start & end time, location, attendees and photos in separate views.\r\n\r\nIt is the delegate of a UITextField object.\r\n\r\nIt posts an EventChangedNotification to the default notification center when an event is created or updated.\r\n\r\nIt also registers with the default notification center to receive LocationCreatedNotification, upon receiving which it creates a new Location object and associate it with the current event being edited.\r\n\r\n**DateViewController.{h,m}**\r\n\r\nThe view controller responsible for editing start and end time for the current event.\r\n\r\n**MapViewController.{h,m}**\r\n\r\nThe view controller containing the MKMapView, responsible for displaying locations for all events, or for the current event, or for a location chosen from bookmarks / search results, by adding and removing custom MKPinAnnotationViews. It allows user to select an annotation to display detailed information.\r\n\r\nIt is the delegate of CLLocationManager, MKMapView, UIPopoverController, and LocationSearchController objects. \r\nIt adopts the LocationSearchControllerDelegate protocol, which allows it to respond to the selection of search results and managing the dismissal of the location search view.\r\n\r\nIt also registers with the default notification center to receive BookmarkSelectedNotification, upon receiving which it adds a new custom MKPinAnnotationView for the annotation representing the bookmark.\r\n\r\n**LocationSearchController.{h,m}**\r\n\r\nThe table view controller responsible for searching places by forward geocoding as well as displaying the search results in a table.\r\n\r\nIt is the delegate of a UISearchBar object.\r\n\r\n**LocationDetailsController.{h,m}**\r\n\r\nThe table view controller responsible for displaying detailed information of a location (properties of a selected MKMapItem object), allowing user to add the location to current event and/or bookmarks as well as opening the Maps app for directions.\r\n\r\nIt posts a LocationCreatedNotification when a location is created.\r\n\r\n**LocationBookmarksController.{h,m}**\r\n\r\nThe table view controller responsible for displaying the list of bookmarks and supporting selection of a bookmark.\r\n\r\nIt posts a BookmarkSelectedNotification when a particular bookmark is selected.\r\n\r\n**LocationAnnotation.{h,m}**\r\n\r\nThe custom MKAnnotation object representing a generic location, hosting a title, a subtitle and an associated MKMapItem object.\r\n\r\n**UpcomingAnnotation.{h,m}**\r\n\r\nThe custom MKAnnotation object representing a location of an upcoming event, hosting a title, a subtitle and an associated MKMapItem object.\r\n\r\n**PastAnnotation.{h,m}**\r\n\r\nThe custom MKAnnotation object representing a location of a past event, hosting a title, a subtitle and an associated MKMapItem object.\r\n\r\n**AttendeeListController.{h,m}**\r\n\r\nThe table view controller responsible for displaying the list of attendees, supporting addition of new attendees and deletion of existing attendees, as well as adding or removing an attendee to or from the current event being edited.\r\n\r\nIt is the delegate of an ABPeoplePickerNavigationController object (known as people-picker navigation controllers), which allows the user to select a contact from an address book.\r\n\r\nIt posts an AttendeeChangedNotification when an attendee is created or deleted.\r\n\r\n**PhotoCollectionController.{h,m}**\r\n\r\nThe collection view controller responsible for display the photo album associated with the current event, supporting addition of new photos via camera or photo library. It also allows user to choose a particular photo to view.\r\n\r\nIt is the delegate of UINavigationController, UIImagePickerController, UIPopoverController, and PhotoViewController objects. It adopts the PhotoViewControllerDelegate protocol, which allows it to manage the deletion of existing photos.\r\n\r\n**PhotoViewController.{h,m}**\r\n\r\nThe view controller responsible for displaying the image for a selected photo. It allows user to choose to delete the current photo.\r\n\r\nIt is the delegate of UIActionSheet and UIPopoverController objects.\r\n\r\n**ReportViewController.{h,m}**\r\n\r\nThe table view controller responsible for displaying a list of Attendee objects with their average cost and average rate properties. It is also responsible for the calculation of each attendee’s average cost and average rate. It gives user options to order the list by average cost or average rate.\r\n\r\nIt registers with the default notification center to receive EventChangedNotification and AttendeeChangedNotification, upon receiving which it updates the table view.\r\n\r\n**EventCell.{h,m}**\r\n\r\nThe custom UITableViewCell object for the table view in EventListController.\r\n\r\n**PhotoCell.{h,m}**\r\n\r\nThe custom UITableViewCell object for the collection view in PhotoCollectionController.\r\n\r\n**ReportCell.{h,m}**\r\n\r\nThe custom UITableViewCell object for the table view in ReportViewController.\r\n\r\n_**Copyright (C) 2013 Di Zhang. All rights reserved.**_","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}